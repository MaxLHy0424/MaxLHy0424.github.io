<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>MaxLHy0424</title><link>https://MaxLHy0424.github.io</link><description>「回去吧, sensei. 让我们回到, 所有『奇迹』的, 始发点...」</description><copyright>MaxLHy0424</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/142279449?v=4</url><title>avatar</title><link>https://MaxLHy0424.github.io</link></image><lastBuildDate>Sat, 22 Jun 2024 13:54:06 +0000</lastBuildDate><managingEditor>MaxLHy0424</managingEditor><ttl>60</ttl><webMaster>MaxLHy0424</webMaster><item><title>终究是小学毕业了</title><link>https://MaxLHy0424.github.io/post/4.html</link><description>&gt; 本文原定于今天下午 7 点发布, 但因为突然有事, 延迟到了现在, 深感抱歉.&#13;
&#13;
不知不觉间, 小学六年时光匆匆而去. 今天起, 我已不再是一名小学生. 鲜艳的红领巾摆放在柜子的一角, 校徽随手丢在抽屉的深处, 校服消沉在了衣柜中. 以往朝夕相处的同学, 现在只存于照片里了. 小学六年, 每一次的欢乐, 哭泣, 振作, 都沉入了昨日的夕阳. 小学生活, 至此告一段落, 画上了圆满的句号.&#13;
&#13;
六年, 9600 节课, 240 个星期, 12 个学期, 一张试卷考散了一群人, 最后只留下一张照片和一声再见. 六年, 书齐了, 人却散了, 和朝夕相处的同学们坐到站了, 也该下车了...下车后，新的列车依旧坐满了人, 可惜, 已经不是原来那群人了...&#13;
&#13;
还记得那每天两声 '老师好' 和 '老师再见', 到现在, 只剩 '有缘再见'. 时光匆匆中, 每个鲜活的人使我难忘. 我的同学, 我的老师, 现在他们都沉于我的漫漫的记忆长河中了. 那些快乐的时光, 都将在我内心深处如宝石般闪闪发光. 明明已是黑夜, 但我仍可见昨日的夕阳...&#13;
&#13;
我将永远铭记这一切, 直到永远...&#13;
&#13;
我的故事尚未画下句号, 大家的故事尚未画下句号. 你我的故事, 仍需继续写下去, 直到人生终末的句号. 这样的时刻会在不久的将来重演, 而你我, 仍然走着自己的人生之路. 我们回首夕阳, 更要看向远方, 将我们的 '青春剧' 继续演下去...&#13;
&#13;
&gt; 谨以此文献给我亲爱的同学, 老师, 以及我的母校. 愿我们都能书写出自己人生的辉煌篇章.。</description><guid isPermaLink="true">https://MaxLHy0424.github.io/post/4.html</guid><pubDate>Sat, 22 Jun 2024 13:53:41 +0000</pubDate></item><item><title>手把手教您编译适用于 WSL2 的 Linux Kernel</title><link>https://MaxLHy0424.github.io/post/3.html</link><description>&#13;
WSL2 即使更新到最新预发布版本, Linux Kernel 版本也是`5.15.xxx`. 一部分软件可能会需要更高的内核版本, 或者是用户想要测试最新的 Linux Kernel 特性. 因此, 网上替换 WSL2 的 Linux Kernel 的教程才会如此涌现.&#13;
&#13;
首先声明, 这可能会导致部分 GNU/Linux 发行版不稳定, 软件包无法运行等问题. 所以不建议在生产环境中替换 WSL2 的 Linux Kernel.&#13;
&#13;
如果您在 WSL2 中使用 Arch Linux, 建议先阅读[这篇教程](https://MaxLHy0424.github.io/post/2.html), 对 Arch Linux 进行基本的配置, 然后再阅读本教程.&#13;
&#13;
如果您能接受这一切, 那么, 开始吧!&#13;
&#13;
# 1 安装依赖&#13;
&#13;
基于 Debian Project 的 GNU/Linux 发行版:&#13;
```Bash&#13;
sudo apt install build-essential flex bison dwarves libssl-dev libelf-dev&#13;
```&#13;
&#13;
基于 Arch Linux 的 GNU/Linux 发行版:&#13;
```Bash&#13;
sudo pacman -S base-devel flex bison pahole openssl libelf bc&#13;
```&#13;
&#13;
# 2 下载 Linux Kernel 源代码&#13;
&#13;
访问网站 ['The Linux Kernel Archive'](https://kernel.org), 等待加载完成后, 可以看到网页中间的 Linux Kernel 源代码存档列表. 在此之前, 我们需要了解 Linux Kernel 的主要开发分支:&#13;
&#13;
1. mainline (主线)&#13;
    - Linux Kernel 的主要开发分支, 由 Linus Torvalds 管理, 包含最新的 Linux Kernel 特性及漏洞修复.&#13;
    - 常常作为下一个 Linux Kernel 的开发分支, 可能存在一些稳定性问题.&#13;
2. stable (稳定)&#13;
    - 最常用的 Linux Kernel 分支, 包含最新的漏洞修复, 日常使用首选.&#13;
3. longterm (长期)&#13;
    - 较旧的 Linux Kernel 分支, 持续进行漏洞修复. 长期使用首选.&#13;
&#13;
根据具体需求下载对应的 Linux Kernel, 然后通过 Windows 资源管理器复制到前面安装好依赖的 GNU/Linux 发行版的用户家目录中.&#13;
&#13;
然后执行以下命令 (请将`&lt;LinuxKernelArchiveFile&gt;`替换为您的 Linux Kernel 压缩包文件名):&#13;
```Bash&#13;
cd ~ &amp;&amp; tar xf &lt;LinuxKernelArchiveFile&gt; &amp;&amp; cd linux*&#13;
```&#13;
&#13;
# 3 编译内核&#13;
&#13;
&gt; 此步骤可能需要代理.&#13;
&#13;
执行以下命令 Microsoft 的 WSL2 Linux Kernel 配置并保存:&#13;
```Bash&#13;
wget https://raw.githubusercontent.com/microsoft/WSL2-Linux-Kernel/linux-msft-wsl-6.1.y/arch/x86/configs/config-wsl -O arch/x86/configs/config-wsl&#13;
```&#13;
&#13;
然后执行以下命令来使用全部线程编译内核:&#13;
```Bash&#13;
make KCONFIG_CONFIG=arch/x86/configs/config-wsl -j$(nproc)&#13;
```&#13;
&#13;
途中的编译配置选择一路按回车即可.&#13;
&#13;
# 4 保存并替换&#13;
&#13;
执行以下命令 (将`&lt;PATH&gt;`替换为 C 盘下的文件路径, 例如`Data/WslLinuxKernel`):&#13;
```Bash&#13;
cp arch/x86/boot/bzImage /mnt/C/&lt;PATH&gt;&#13;
```&#13;
然后将文件名改为`kernel`.&#13;
&#13;
接着, 在当前 Windows 用户目录下创建文件`.wslconfig` (有则不用), 添加 (`[wsl2]`无需重复添加; 将`C:\\&lt;PATH&gt;\\kernel`替换为您的 Linux Kernel 文件路径; 把路径分隔符替换为`\\`):&#13;
```&#13;
[wsl2]&#13;
kernel=C:\\&lt;PATH&gt;\\kernel &#13;
```&#13;
&#13;
接着, 在 Windows 终端中执行以下命令:&#13;
```Batch&#13;
wsl --shutdown&#13;
```&#13;
&#13;
再次启动 WSL2 中的 GNU/Linux 发行版, 执行:&#13;
```Bash&#13;
uname -a&#13;
```&#13;
&#13;
Linux Kernel 已经成功替换, 一切大功告成!。</description><guid isPermaLink="true">https://MaxLHy0424.github.io/post/3.html</guid><pubDate>Fri, 21 Jun 2024 10:43:20 +0000</pubDate></item><item><title>下江小春都能看懂的 Arch Linux for WSL2 安装与配置指南</title><link>https://MaxLHy0424.github.io/post/2.html</link><description>在 Windows 上开发 Linux 软件时, WSL2 常为不二之选.&#13;
&#13;
但是, WSL2 上开箱即用的 GNU/Linux 发行版, 几乎都是基于 Debian Project 的. 想要在 WSL2 上使用 Arch Linux, 配置较为麻烦.&#13;
&#13;
本教程将帮助您在 WSL2 上安装并配置 Arch Linux!&#13;
&#13;
&gt; 适用于 Windows 11 22H2 及以上版本, 其以下的版本可能会出现各种问题.&#13;
&#13;
# 0 准备工作&#13;
&#13;
WSL2 的硬件需求及启用方法在此处不多赘述, 请自行查阅.&#13;
&#13;
&gt; 如果您有安装 VMware Workstation Pro 等寄居型虚拟机, 推荐改用 Microsoft Hyper-V. 否则其运行的虚拟机性能可能会受到影响.&#13;
&#13;
启用后, 在 Windows 终端 (以管理员权限运行) 中执行以下命令:&#13;
```Batch&#13;
wsl --update &amp;&amp; wsl --update --pre-release&#13;
```&#13;
&#13;
接着, 在当前的 Windows 用户目录下创建文件`.wslconfig`, 在文件中添加以下内容:&#13;
```&#13;
[wsl2]&#13;
ipv6=true&#13;
networkingMode=mirrored&#13;
dnsTunneling=true&#13;
firewall=true&#13;
autoProxy=true&#13;
[experimental]&#13;
autoMemoryReclaim=gradual&#13;
```&#13;
&#13;
然后, 在 Microsoft Store 中搜索`Arch WSL`, 点击下图中所示的软件 (一般为第1个):&#13;
&#13;
![Microsoft Store 搜索结果的局部截图](https://github.com/MaxLHy0424/MaxLHy0424.github.io/assets/142279449/ef60802e-5e57-4b6f-81cf-aa6add640178)&#13;
&#13;
按照正常流程安装, 打开, 创建账户. &#13;
&#13;
# 1 登录`root`用户并修改密码&#13;
&#13;
执行`sudo su`进入`root`用户后, 通过`passwd root`修改`root`用户密码.&#13;
&#13;
# 2 配置 GNU Nano 文本编辑器&#13;
&#13;
打开`/etc/nanorc`, 在末尾追加:&#13;
```&#13;
bind ^X cut main&#13;
bind ^C copy main&#13;
bind ^V paste all&#13;
bind ^Q exit all&#13;
bind ^S savefile main&#13;
bind ^W writeout main&#13;
bind ^O insert main&#13;
bind ^H help all&#13;
bind ^H exit help&#13;
bind ^F whereis all&#13;
bind ^G findnext all&#13;
bind ^B wherewas all&#13;
bind ^D findprevious all&#13;
bind ^R replace main&#13;
unbind ^U all&#13;
unbind ^N main&#13;
unbind ^Y all&#13;
unbind M-J main&#13;
unbind M-T main&#13;
bind ^A mark main&#13;
bind ^P location main&#13;
bind ^T gotoline main&#13;
bind ^T gotodir browser&#13;
bind ^T cutrestoffile execute&#13;
bind ^L linter execute&#13;
bind ^E execute main&#13;
bind ^K '{mark}{end}{zap}' main&#13;
bind ^U '{mark}{home}{zap}' main&#13;
bind ^Z undo main&#13;
bind ^Y redo main&#13;
set tabsize 4&#13;
set autoindent&#13;
set noconvert&#13;
set smarthome&#13;
set tabstospaces&#13;
set mouse&#13;
set linenumbers&#13;
set casesensitive&#13;
set multibuffer&#13;
set nonewlines&#13;
set magic&#13;
set softwrap&#13;
set wordbounds&#13;
set constantshow&#13;
include /usr/share/nano/*.*&#13;
```&#13;
&#13;
# 3 配置包管理器&#13;
&#13;
打开`/etc/pacman.d/mirrorlist`, 在顶部添加:&#13;
```&#13;
Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch&#13;
```&#13;
&#13;
打开`/etc/pacman.conf`, 找到:&#13;
```&#13;
#UseSyslog&#13;
#Color&#13;
NoProgressBar&#13;
```&#13;
换成:&#13;
```&#13;
UseSyslog&#13;
Color&#13;
#NoProgressBar&#13;
```&#13;
&#13;
然后找到这一行:&#13;
```&#13;
ParallelDownloads = 5&#13;
```&#13;
将后面的`5`修改成你想要同时下载的软件包的数量.&#13;
&#13;
接着把后面的软件源全部删掉, 换成下面的:&#13;
```&#13;
[testing]&#13;
Include = /etc/pacman.d/mirrorlist&#13;
[staging]&#13;
Include = /etc/pacman.d/mirrorlist&#13;
[core-testing]&#13;
Include = /etc/pacman.d/mirrorlist&#13;
[core-staging]&#13;
Include = /etc/pacman.d/mirrorlist&#13;
[core]&#13;
Include = /etc/pacman.d/mirrorlist&#13;
[extra-testing]&#13;
Include = /etc/pacman.d/mirrorlist&#13;
[extra-staging]&#13;
Include = /etc/pacman.d/mirrorlist&#13;
[extra]&#13;
Include = /etc/pacman.d/mirrorlist&#13;
[community-testing]&#13;
Include = /etc/pacman.d/mirrorlist&#13;
[community-staging]&#13;
Include = /etc/pacman.d/mirrorlist&#13;
[community]&#13;
Include = /etc/pacman.d/mirrorlist&#13;
[multilib-testing]&#13;
Include = /etc/pacman.d/mirrorlist&#13;
[multilib-staging]&#13;
Include = /etc/pacman.d/mirrorlist&#13;
[multilib]&#13;
Include = /etc/pacman.d/mirrorlist&#13;
[archlinuxcn]&#13;
Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch&#13;
[blackarch]&#13;
SigLevel = Never&#13;
Server = https://mirrors.tuna.tsinghua.edu.cn/blackarch/$repo/os/$arch&#13;
&#13;
```&#13;
&#13;
执行以命令:&#13;
```Bash&#13;
pacman-key --init &amp;&amp; pacman-key --lsign-key 'farseerfc@archlinux.org' &amp;&amp; pacman -Sy archlinuxcn-keyring blackarch-keyring&#13;
```&#13;
&#13;
执行以下命令安装 yay 稳定版 (开发版把第一个`yay`改为`yay-git`):&#13;
````Bash&#13;
pacman -S yay&#13;
````&#13;
&#13;
# 4 汉化&#13;
&#13;
打开`/etc/locale.gen`, 找到以下两行:&#13;
```&#13;
#en_US.UTF-8 UTF-8&#13;
#zh_CN.UTF-8 UTF-8&#13;
```&#13;
将前面的`#`去掉.&#13;
&#13;
打开`/etc/locale.conf`, 在末尾追加:&#13;
```&#13;
LANG=en_US.UTF-8&#13;
```&#13;
&#13;
打开`/etc/profile`, 在末尾追加:&#13;
```&#13;
export LC_ALL=zh_CN.UTF-8&#13;
export LANG=zh_CN.UTF-8:en_US.UTF-8&#13;
```&#13;
&#13;
然后执行以下命令:&#13;
```Bash&#13;
pacman -S adobe-source-han-sans-cn-fonts adobe-source-han-serif-cn-fonts wqy-microhei wqy-microhei-lite ttf-hannom wqy-zenhei wqy-bitmapfont ttf-arphic-ukai ttf-arphic-uming ttf-hannom noto-fonts opendesktop-fonts noto-fonts-emoji &amp;&amp; locale-gen&#13;
```&#13;
&#13;
# 5 解决 WSLg 及 Systemd 问题&#13;
&#13;
执行以下命令:&#13;
```Bash&#13;
echo \&#13;
'# Type Path           Mode UID  GID  Age Argument&#13;
L+     /tmp/.X11-unix -    -    -    -   /mnt/wslg/.X11-unix' | tee /etc/tmpfiles.d/wslg.conf &amp;&amp; echo -e '[boot]\nsystemd=true' | tee -a /etc/wsl.conf&#13;
```&#13;
&#13;
# 6 善后工作&#13;
&#13;
执行以下命令:&#13;
```Bash&#13;
pacman -Syyu &amp;&amp; yay -S net-tools tree sed python wget &amp;&amp; yay -Rns $(pacman -Qtdq) &amp;&amp; yay -Scc &amp;&amp; rm -rf /tmp/*&#13;
```&#13;
&#13;
如果后续需要安装软件源`blackarch`内的软件包, 推荐在此之前先打开`/etc/pacman.conf`, 注释以下几行:&#13;
```&#13;
[extra-testing]&#13;
Include = /etc/pacman.d/mirrorlist&#13;
[extra-staging]&#13;
Include = /etc/pacman.d/mirrorlist&#13;
```&#13;
然后使用`sudo pacman -Syy`更新软件源, 再安装软件包, 完成之后再将上面的几行取消注释.&#13;
&#13;
# *? 预告*&#13;
&#13;
WSL2 即使更新到最新预发布版本, Linux Kernel 版本也是`5.15.xxx`. 下一篇教程将教您自己编译 Linux Kernel, 并在 WSL2 中使用!。</description><guid isPermaLink="true">https://MaxLHy0424.github.io/post/2.html</guid><pubDate>Thu, 20 Jun 2024 11:15:36 +0000</pubDate></item><item><title>欢迎!</title><link>https://MaxLHy0424.github.io/post/1.html</link><description>欢迎来到我 *MaxLHy0424* 的博客 ヾ(≧▽≦*)o&#13;
日后这里将会发布**我整理的一些资源**, 和**我自己写的文章 (包括但不限于教程, 同人文)**.&#13;
感兴趣的话, 可以将本网站加入浏览器收藏夹, 或者推荐给其他人, 感激不尽!。</description><guid isPermaLink="true">https://MaxLHy0424.github.io/post/1.html</guid><pubDate>Thu, 20 Jun 2024 09:44:09 +0000</pubDate></item></channel></rss>